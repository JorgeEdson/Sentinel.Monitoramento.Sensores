name: CI/CD - Sentinel Monitoramento Sensores

on:
    push:
      branches:
        - master
    pull_request:
      branches:
        - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:

    # 1Ô∏è‚É£ Checkout do c√≥digo
    - name: Checkout do reposit√≥rio
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Configurar .NET 8
    - name: Configurar .NET 8
      uses: actions/setup-dotnet@v3
      with:
          dotnet-version: 8.0.x

    # 3Ô∏è‚É£ Restaurar depend√™ncias
    - name: Restaurar depend√™ncias
      run: dotnet restore Sentinel.Monitoramento.Sensores

    # 4Ô∏è‚É£ Compilar o projeto
    - name: Compilar o projeto
      run: dotnet build Sentinel.Monitoramento.Sensores --no-restore --configuration Release

    # 5Ô∏è‚É£ Rodar testes (se houver)
    - name: Executar testes
      run: dotnet test Sentinel.Monitoramento.Sensores --no-build --configuration Release

    # 6Ô∏è‚É£ Configurar Docker
    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # 7Ô∏è‚É£ Logar no GitHub Container Registry (GHCR) ou Docker Hub
    - name: Login no GHCR
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # 8Ô∏è‚É£ Criar a imagem Docker
    - name: Construir a imagem Docker
      run: |
       docker build -t ghcr.io/${{ github.repository }}/sentinel-monitoramento-sensores:latest .

    # 9Ô∏è‚É£ Enviar imagem para o GHCR
    - name: Publicar imagem no GHCR
      run: |
       docker push ghcr.io/${{ github.repository }}/sentinel-monitoramento-sensores:latest

    # üîü Fazer deploy (Opcional - pode ser SSH, Kubernetes, etc.)
    - name: Deploy no servidor
      run: |
       echo "Aqui voc√™ pode rodar um SSH ou acionar um servi√ßo de deploy"